{"version":3,"file":"static/js/462.76993719.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","webpack://react-homework-template/./src/components/Pages/ContactsPage/ContactsPage.module.css?6d4e","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/loader.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","components/Pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__e1yzW\",\"button\":\"Form_button__8NOIT\",\"input\":\"Form_input__FTtTw\"};","import { useDispatch, useSelector } from 'react-redux';\nimport css from './Form.module.css';\nimport { useState } from 'react';\nimport Notiflix from 'notiflix';\nimport { getContactValue } from 'store/contactsSlice';\nimport { addContactThunk } from 'store/thunks';\n\nexport const Form = () => {\n  const [name, setName] = useState('');\n  const [phone, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContactValue);\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const newContact = { name, phone };\n\n    if (isDuplicated(contacts, newContact) !== undefined) {\n      Notiflix.Notify.failure(`${newContact.name} is already in contacts`, {\n        width: '400px',\n        position: 'center-center',\n        timeout: 3000,\n        fontSize: '20px',\n      });\n      return;\n    }\n\n    dispatch(addContactThunk(newContact));\n\n    reset();\n  };\n\n  const isDuplicated = (contacts, newContact) => {\n    return contacts.find(\n      ({ name }) => name.toLowerCase() === newContact.name.toLowerCase()\n    );\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label>\n        Name <br />\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        Phone number <br />\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          value={phone}\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <button className={css.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"ContactsPage_title__WYTlr\",\"contactsWrapper\":\"ContactsPage_contactsWrapper__7MKLe\",\"phonebookWrapper\":\"ContactsPage_phonebookWrapper__Qj+YV\"};","// extracted by mini-css-extract-plugin\nexport default {\"filterField\":\"Filter_filterField__hjFfe\"};","import { useDispatch, useSelector } from 'react-redux';\nimport css from './Filter.module.css';\nimport { filterSet, getFilter } from 'store/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filterContacts = useSelector(getFilter);\n\n  const changeFilter = e => {\n    const { value } = e.currentTarget;\n    dispatch(filterSet(value));\n  };\n\n  return (\n    <label className={css.filterInput}>\n      Find contacts by name: <br />\n      <input\n        className={css.filterField}\n        type=\"text\"\n        name=\"filter\"\n        value={filterContacts}\n        onChange={changeFilter}\n      />\n    </label>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { ThreeCircles } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\nexport const Loader = () => {\n  return (\n    <div className={css.loader}>\n      <ThreeCircles\n        height=\"100\"\n        width=\"100\"\n        color=\"#3f51b5\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"three-circles-rotating\"\n        outerCircleColor=\"\"\n        innerCircleColor=\"\"\n        middleCircleColor=\"\"\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"listContact\":\"ContactList_listContact__gg2c1\",\"buttonDelete\":\"ContactList_buttonDelete__3LEoC\",\"contactItem\":\"ContactList_contactItem__ppNQ5\"};","import { useEffect } from 'react';\nimport css from './ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from 'store/filterSlice';\nimport { deleteContactThunk, getContactsThunk } from 'store/thunks';\nimport { getContactValue } from 'store/contactsSlice';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContactsThunk());\n  }, [dispatch]);\n\n  const contacts = useSelector(getContactValue);\n  const filterContacts = useSelector(getFilter);\n\n  const lowerFilter = filterContacts.toLowerCase();\n\n  const visibleContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(lowerFilter)\n  );\n\n  const delContact = contactId => {\n    dispatch(deleteContactThunk(contactId));\n  };\n\n  return (\n    <ul className={css.listContact}>\n      {visibleContacts.map(({ name, phone, id }) => (\n        <li className={css.contactItem} key={id}>\n          <p>\n            {name}: {phone}\n          </p>\n          <button\n            type=\"button\"\n            className={css.buttonDelete}\n            onClick={() => delContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { Form } from 'components/Form/Form';\nimport css from './ContactsPage.module.css';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/loader';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { useSelector } from 'react-redux';\nimport { getContactValue, getIsLoading } from 'store/contactsSlice';\n\nconst ContactsPage = () => {\n  const contactIsLoading = useSelector(getIsLoading);\n  const contacts = useSelector(getContactValue);\n\n  return (\n    <div>\n      <div className={css.phonebookWrapper}>\n        <h1 className={css.title}>Phonebook</h1>\n        <Form />\n      </div>\n      <div className={css.contactsWrapper}>\n        <h2 className={css.title}>Contacts</h2>\n        {contacts !== null && <Filter />}\n        {contactIsLoading && <Loader />}\n        <ContactList />\n      </div>\n    </div>\n  );\n};\nexport default ContactsPage;\n"],"names":["Form","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","phone","setNumber","dispatch","useDispatch","contacts","useSelector","getContactValue","handleChange","e","_e$currentTarget","currentTarget","value","isDuplicated","newContact","find","_ref","toLowerCase","reset","_jsxs","className","css","onSubmit","preventDefault","undefined","addContactThunk","Notiflix","concat","width","position","timeout","fontSize","children","_jsx","type","required","onChange","Filter","filterContacts","getFilter","filterSet","Loader","ThreeCircles","height","color","wrapperStyle","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","ContactList","useEffect","getContactsThunk","lowerFilter","visibleContacts","filter","includes","map","_ref2","id","onClick","contactId","deleteContactThunk","contactIsLoading","getIsLoading"],"sourceRoot":""}